===============
Builtin Modules
===============

Compysition comes with a set of builtin modules.  Modules are isolated blocks of
functionality which are connected to each other within a router instance.

There are different types of modules:

    - input modules
    - output modules
    - flow modules
    - function modules

Compysition comes with a set of builtin modules which deliver a minimal functionality.
Thanks to the :class:`compysition.Actor` class it is easy to create your own modules from scratch.

Input modules
-------------

Input modules take input from the outside world into the Compysition framework.
They often have only 1 :class:`compysition.tools.CompysitionQueue` called **outbox**
in which incoming events go. Input modules are also responsible to format any
incoming data into the expected Compysition internal event format.

Builtin modules:

.. autoclass:: compysition.module.TestEvent

Output modules
--------------

Output modules take input from another module registered in the Compysition
router and submit these events to the outside world. They often have only 1
:class:`compysition.tools.CompysitionQueue` called **inbox** in which events arrive
destined to go out. They typically act as TCP, AMQP or other network protocol
clients.

Builtin modules:

.. autoclass:: compysition.module.Syslog
.. autoclass:: compysition.module.Null
.. autoclass:: compysition.module.STDOUT

Flow modules
------------

Flow modules accept and forward events from and to other modules.  They
fulfill a key roll in building a message flow.  Since you can only have a 1:1
relationship between queues, you cannot split or merge event streams.  That's
where flow modules come handy.  Flow modules are not expected to alter events
when transiting the module.

Builtin modules:

.. autoclass:: compysition.module.RoundRobin
.. autoclass:: compysition.module.Fanout
.. autoclass:: compysition.module.Funnel
.. autoclass:: compysition.module.TippingBucket
.. autoclass:: compysition.module.LockBuffer

Function modules
----------------

Function modules accept and forward events from and to other modules.  They
can have a wide range of functionality and change events when transiting the
module.

Builtin modules:

.. autoclass:: compysition.module.Header




